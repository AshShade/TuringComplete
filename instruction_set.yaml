version: 1.0
description: 示例32位指令集配置，前8bit为opcode（含操作数类型和控制位），后24bit为三个operand
bit_layout:
  bit_31_to_24:
    name: opcode
    fields:
      bit_7: operand1_is_immediate   # 1=immediate, 0=register
      bit_6: operand2_is_immediate   # 1=immediate, 0=register
      bit_5: type_bit1               # 指令类型高位
      bit_4: type_bit0               # 指令类型低位
      bit_3_to_0: opcode_id          # 指令编号
    type_encoding:
      '00': arithmetic/logic
      '01': memory (memory and stack)
      '10': control
      '11': reserved
  bit_23_to_16: operand1           # 第一个操作数（寄存器编号、立即数或地址）
  bit_15_to_8: operand2            # 第二个操作数（寄存器编号、立即数或地址）
  bit_7_to_0: operand3             # 第三个操作数（寄存器编号、立即数或地址）
instructions:
  # =========================================
  # |  Arithmetic/Logic Instructions        |
  # =========================================
  - name: ADD
    opcode: 0x00
    opcode_bin: 0b00000000
    type: arithmetic
    control: false
    operand1: register|immediate  # 由opcode的bit7决定
    operand2: register|immediate  # 由opcode的bit6决定
    operand3: register
    description: 三操作数加法, operand3 = operand1 + operand2

  - name: SUB
    opcode: 0x01
    opcode_bin: 0b00000001
    type: arithmetic
    control: false
    operand1: register|immediate  # 由opcode的bit7决定
    operand2: register|immediate  # 由opcode的bit6决定
    operand3: register
    description: 三操作数减法, operand3 = operand1 - operand2

  - name: AND
    opcode: 0x02
    opcode_bin: 0b00000010
    type: logic
    control: false
    operand1: register|immediate  # 由opcode的bit7决定
    operand2: register|immediate  # 由opcode的bit6决定
    operand3: register
    description: 三操作数位与, operand3 = operand1 & operand2

  - name: OR
    opcode: 0x03
    opcode_bin: 0b00000011
    type: logic
    control: false
    operand1: register|immediate  # 由opcode的bit7决定
    operand2: register|immediate  # 由opcode的bit6决定
    operand3: register
    description: 三操作数位或, operand3 = operand1 | operand2

  - name: NOT
    opcode: 0x04
    opcode_bin: 0b00000100
    type: logic
    control: false
    operand1: register|immediate  # 由opcode的bit7决定
    operand3: register
    description: 位非, operand3 = ~operand1

  - name: XOR
    opcode: 0x05
    opcode_bin: 0b00000101
    type: logic
    control: false
    operand1: register|immediate  # 由opcode的bit7决定
    operand2: register|immediate  # 由opcode的bit6决定
    operand3: register
    description: 三操作数位异或, operand3 = operand1 ^ operand2

  # =========================================
  # |  Memory/Stack Instructions            |
  # =========================================
  - name: STORE
    opcode: 0x10
    opcode_bin: 0b00010000
    type: memory
    control: false
    operand1: register|immediate  # 要写入的数据, 由opcode的bit7决定
    operand2: null
    operand3: address            # 目标内存地址
    description: 将operand1写入到operand3(address)

  - name: LOAD
    opcode: 0x11
    opcode_bin: 0b00010001
    type: memory
    control: false
    operand1: address            # 源内存地址
    operand2: null
    operand3: register           # 目标寄存器
    description: 将operand1(address)的数据读入到operand3(register)

  - name: PUSH
    opcode: 0x12
    opcode_bin: 0b00010010
    type: memory
    control: false
    operand1: register|immediate  # 要压入栈的数据, 由opcode的bit7决定
    operand2: null
    operand3: null
    description: 将operand1压入栈

  - name: POP
    opcode: 0x13
    opcode_bin: 0b00010011
    type: memory
    control: false
    operand1: register           # 弹出数据存入的目标寄存器
    operand2: null
    operand3: null
    description: 将栈顶数据弹出到operand1(register)

  # =========================================
  # |  Control Instructions                 |
  # =========================================
  - name: EQ
    opcode: 0x20
    opcode_bin: 0b00100000
    type: control
    control: true
    operand1: register|immediate  # 由opcode的bit7决定
    operand2: register|immediate  # 由opcode的bit6决定
    operand3: address
    description: 如果operand1 == operand2, 则跳转到operand3(address)

  - name: NEQ
    opcode: 0x21
    opcode_bin: 0b00100001
    type: control
    control: true
    operand1: register|immediate  # 由opcode的bit7决定
    operand2: register|immediate  # 由opcode的bit6决定
    operand3: address
    description: 如果operand1 != operand2, 则跳转到operand3(address)

  - name: LT
    opcode: 0x22
    opcode_bin: 0b00100010
    type: control
    control: true
    operand1: register|immediate  # 由opcode的bit7决定
    operand2: register|immediate  # 由opcode的bit6决定
    operand3: address
    description: 如果operand1 < operand2, 则跳转到operand3(address)

  - name: LTEQ
    opcode: 0x23
    opcode_bin: 0b00100011
    type: control
    control: true
    operand1: register|immediate  # 由opcode的bit7决定
    operand2: register|immediate  # 由opcode的bit6决定
    operand3: address
    description: 如果operand1 <= operand2, 则跳转到operand3(address)

  - name: GT
    opcode: 0x24
    opcode_bin: 0b00100100
    type: control
    control: true
    operand1: register|immediate  # 由opcode的bit7决定
    operand2: register|immediate  # 由opcode的bit6决定
    operand3: address
    description: 如果operand1 > operand2, 则跳转到operand3(address)

  - name: GTEQ
    opcode: 0x25
    opcode_bin: 0b00100101
    type: control
    control: true
    operand1: register|immediate  # 由opcode的bit7决定
    operand2: register|immediate  # 由opcode的bit6决定
    operand3: address
    description: 如果operand1 >= operand2, 则跳转到operand3(address)
